# .github/workflows/pr-preview.yml
name: PR Preview Build and Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened] # Trigger on these PR events

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up GoLang
        uses: actions/setup-go@v2
        with:
          go-version: "1.23"

      - name: Run tests
        run: |
          go mod download
          go test ./...

      - name: Upload built binary
        uses: actions/upload-artifact@v4.6.0
        with:
          name: main-${{ github.sha }}
          path: main

  build_and_push:
    runs-on: ubuntu-latest
    needs: [tests] # Depend on tests passing
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Download binary if uploaded in tests and needed for build (e.g. by Dockerfile ADD)
      - name: Download built binary
        uses: actions/download-artifact@v4.1.8
        with:
          name: main-${{ github.sha }} # Ensure name matches upload

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }} # Ensure this secret has write access to GHCR

      - name: Build and push Docker image (PR tag)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          # Tag uniquely using the PR number
          tags: |
            ghcr.io/jaimendo99/zeppelin-backend:pr-${{ github.event.number }}
          # Do NOT tag with ':latest' here!

  trigger_coolify_preview:
    runs-on: ubuntu-latest
    needs: [build_and_push] # Only trigger after the image is successfully pushed
    steps:
      - name: Trigger Coolify Preview Deployment via /deploy endpoint with 'pr' parameter
        run: |
          PR_NUMBER=${{ github.event.number }}
          IMAGE_TAG="ghcr.io/jaimendo99/zeppelin-backend:pr-${PR_NUMBER}"
          COOLIFY_BASE_URL="http://62.146.226.103:8000"
          API_ENDPOINT="/api/v1/deploy"
          RESOURCE_UUID="${{ secrets.RESOURCE_UUID }}"
          COOLIFY_API_TOKEN="${{ secrets.COOLIFY_TOKEN }}"
          curl -X GET \
            "${COOLIFY_BASE_URL}${API_ENDPOINT}?uuid=${RESOURCE_UUID}&pr=${PR_NUMBER}&tag=${IMAGE_TAG}&force=false" \
            -H "Authorization: Bearer ${COOLIFY_API_TOKEN}" \
            -v
